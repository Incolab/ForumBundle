<?php

namespace Incolab\ForumBundle\Repository;

/**
 * TopicRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TopicRepository extends \Doctrine\ORM\EntityRepository
{
    public static $strGetTopicQuery = "SELECT t, f, r, "
            . "partial c.{id, name, slug}, partial p.{id, name, slug}, "
            . "fa, ra "
            . "FROM IncolabForumBundle:Topic t LEFT JOIN t.firstPost f "
            . "LEFT JOIN t.replies r LEFT JOIN t.category c LEFT JOIN c.parent p "
            . "LEFT JOIN f.author fa LEFT JOIN r.author ra "
            . "WHERE t.slug = :slugTopic AND c.slug = :slugCat AND p.slug = :slugParentCat "
            . "ORDER BY r.createdAt ASC";
    
    public function getTopicBySlugTopicCatParentCat($slugTopic, $slugCat, $slugParentCat)
    {
        $query = $this->_em->createQuery(self::$strGetTopicQuery)
            ->setParameters(
                array(
                    ':slugTopic' => $slugTopic,
                    ':slugCat' => $slugCat,
                    ':slugParentCat' => $slugParentCat
                )
            );
        
        return $query->getOneOrNullResult();
    }
    
    public function getTopicForInsertPost($slugTopic, $slugCat, $slugParentCat)
    {
        $topic = $this->createQueryBuilder('t')
                ->leftJoin('t.category', 'c')
                ->leftJoin('t.firstPost', 'f')
                ->leftJoin('t.replies', 'r')
                ->leftJoin('c.parent', 'p')
                ->addSelect('c')
                ->addSelect('f')
                ->addSelect('r')
                ->addSelect('p')
                ->where('t.slug = :slugTopic AND c.slug = :slugCat AND p.slug = :slugParentCat')
                ->setParameters(
                    array(
                        ':slugTopic' => $slugTopic,
                        ':slugCat' => $slugCat,
                        ':slugParentCat' => $slugParentCat
                    )
                )
                ->getQuery()->getOneOrNullResult();
        
        return $topic;
    }
}
